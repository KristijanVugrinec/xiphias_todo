{% extends 'base.html.twig' %}

{% block title %}Todo List{% endblock %}

{% block body %}
    <h1>Todo List</h1>
    {# <a href="{{ path('todo_create') }}" class="btn btn-success">Create New Todo</a> #}
    <div class="todo_list_wrapper">
    <div class="finished_todos">
    <p>Finished!</p>
    {% set finished = false %}
        {% for todo in todos %}
            {% if todo.isFinished %}
                {% set finished = true %}
            <div class="todo_list" data-id="{{todo.id}}">
            {# <div>
            <p>Due by: {{ todo.dueDate|date('Y-m-d H:i') }}</p>
            </div> #}
            <div class="todo_list_main">
            <p>Title: {{ todo.title }}</p>
            <p>Description: {{todo.description}}</p>
            <button class="delete-todo-btn" data-id="{{todo.id}}"></button>
            {# <button class="is-finished-btn {{todo.isFinished ? 'disabled'}}" data-id="{{todo.id}}" data-finished="{{todo.isFinished ? '1' : '0'}}" {% if todo.isFinished %}disabled{% endif %}></button> #}
            </div>
            </div>
            {% endif %}
        {% endfor %}
        {% if not finished %}
            <p>No finished todos yet!</p>
            {% endif %}
        </div>
        <div class="unfinished_todos">
        <p>Active!</p>
        {% set unfinished = false %}
            {% for todo in todos %}
                {% if not todo.isFinished %}
                {% set unfinished = true %}
                    <div class="todo_list" data-id="{{todo.id}}">
            <div class="date_for_list">
            <p>Due by: {{ todo.dueDate|date('Y-m-d H:i') }}</p>
            </div>
            <div class="todo_list_main">
            <p>Title: {{ todo.title }}</p>
            <p>Description: {{todo.description}}</p>
            <button class="delete-todo-btn" data-id="{{todo.id}}"></button>
            <button class="is-finished-btn {{todo.isFinished ? 'disabled'}}" data-id="{{todo.id}}" data-finished="{{todo.isFinished ? '1' : '0'}}" {% if todo.isFinished %}disabled{% endif %}></button>
            </div>
            </div>
                {% endif %}
                {% endfor %}
            {% if not unfinished %}
            <p>There is no todos to finish!</p>
            {% endif %}
        </div>
    </div>
    <div class="legend_for_buttons">
        <div class="legend_wrapper">
            <div class="legend_for_delete">
                <div class="delete_button">
                </div>
                    <p>Delete with this button!</p>
        </div>
            </div>
        <div class="legend_wrapper">
            <div class="legend_for_finish">
                <div class="finished_button">
                </div>
                <p>Mark as finished!</p>
            </div>
        </div>
    {# <a href="{{ path('app_logout') }}">Odjavite se</a> #}

    <script>
    document.addEventListener('DOMContentLoaded',() => {
        document.querySelectorAll('.delete-todo-btn').forEach(button => {
            button.addEventListener('click',()=>{
                const todoId = button.getAttribute('data-id');
                console.log("id od todo-a",todoId)

                fetch(`/todo/${todoId}/delete`,{
                    method:'DELETE',
                    headers:{
                        'X-Requested-With':'XMLHttpRequest'
                    },
                })

                .then(response => {
                    if(response.ok){
                        alert('Todo deleted successfully');
                        location.reload()
                    } else {
                        response.json().then(data => {
                            alert(data.message || 'An error occurred')
                        })
                    }
                })
                .catch(error => {
                    console.error('Error',error)
                    alert('An error occurred while deleting the todo.')
                })
            })
        })

        document.querySelectorAll('.is-finished-btn').forEach(button => {
            button.addEventListener('click',() => {
                const todoId = button.getAttribute('data-id');
                const isFinished = button.getAttribute('data-finished') === '1';

                fetch(`/todo/${todoId}/toggle-finished`,{
                    method:'POST',
                    headers:{
                        'X-Requested-With':'XMLHttpRequest',
                        'Content-Type':'application/json',
                    },
                    body:JSON.stringify({isFinished:!isFinished})
                })
                .then(response => response.json())
                .then(data => {
                    if(data.success){
                        button.setAttribute('data-finished', '1'); 
                        button.classList.add('disabled')
                        button.disabled = true;
                        location.reload()
                    } else {
                        aler('An error occured while updating the task status.')
                    }
                })
                .catch(error => {
                    console.log('Error:',error)
                    alert('An error occurred while updating the task status.');
                })
            })
        })
    })
    </script>
{% endblock %}
